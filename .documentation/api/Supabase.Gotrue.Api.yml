### YamlMime:ManagedReference
items:
- uid: Supabase.Gotrue.Api
  commentId: T:Supabase.Gotrue.Api
  id: Api
  parent: Supabase.Gotrue
  children:
  - Supabase.Gotrue.Api.#ctor(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  - Supabase.Gotrue.Api.GetUser(System.String)
  - Supabase.Gotrue.Api.Headers
  - Supabase.Gotrue.Api.InviteUserByEmail(System.String)
  - Supabase.Gotrue.Api.RefreshAccessToken(System.String)
  - Supabase.Gotrue.Api.ResetPasswordForEmail(System.String)
  - Supabase.Gotrue.Api.SendMagicLinkEmail(System.String)
  - Supabase.Gotrue.Api.SignInWithEmail(System.String,System.String)
  - Supabase.Gotrue.Api.SignOut(System.String)
  - Supabase.Gotrue.Api.SignUpWithEmail(System.String,System.String)
  - Supabase.Gotrue.Api.UpdateUser(System.String,Supabase.Gotrue.UserAttributes)
  - Supabase.Gotrue.Api.Url
  langs:
  - csharp
  - vb
  name: Api
  nameWithType: Api
  fullName: Supabase.Gotrue.Api
  type: Class
  source:
    id: Api
    path: /Users/schultzjosephj/dev/gotrue-csharp/Gotrue/Api.cs
    startLine: 12
  assemblies:
  - Gotrue
  namespace: Supabase.Gotrue
  syntax:
    content: public class Api
    content.vb: Public Class Api
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Supabase.Gotrue.Api.Url
  commentId: P:Supabase.Gotrue.Api.Url
  id: Url
  parent: Supabase.Gotrue.Api
  langs:
  - csharp
  - vb
  name: Url
  nameWithType: Api.Url
  fullName: Supabase.Gotrue.Api.Url
  type: Property
  source:
    id: Url
    path: /Users/schultzjosephj/dev/gotrue-csharp/Gotrue/Api.cs
    startLine: 14
  assemblies:
  - Gotrue
  namespace: Supabase.Gotrue
  syntax:
    content: protected string Url { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected ReadOnly Property Url As String
  overload: Supabase.Gotrue.Api.Url*
  modifiers.csharp:
  - protected
  - get
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Supabase.Gotrue.Api.Headers
  commentId: F:Supabase.Gotrue.Api.Headers
  id: Headers
  parent: Supabase.Gotrue.Api
  langs:
  - csharp
  - vb
  name: Headers
  nameWithType: Api.Headers
  fullName: Supabase.Gotrue.Api.Headers
  type: Field
  source:
    id: Headers
    path: /Users/schultzjosephj/dev/gotrue-csharp/Gotrue/Api.cs
    startLine: 15
  assemblies:
  - Gotrue
  namespace: Supabase.Gotrue
  syntax:
    content: protected Dictionary<string, string> Headers
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.String}
    content.vb: Protected Headers As Dictionary(Of String, String)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Supabase.Gotrue.Api.#ctor(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:Supabase.Gotrue.Api.#ctor(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  id: '#ctor(System.String,System.Collections.Generic.Dictionary{System.String,System.String})'
  parent: Supabase.Gotrue.Api
  langs:
  - csharp
  - vb
  name: Api(String, Dictionary<String, String>)
  nameWithType: Api.Api(String, Dictionary<String, String>)
  fullName: Supabase.Gotrue.Api.Api(System.String, System.Collections.Generic.Dictionary<System.String, System.String>)
  type: Constructor
  source:
    id: .ctor
    path: /Users/schultzjosephj/dev/gotrue-csharp/Gotrue/Api.cs
    startLine: 22
  assemblies:
  - Gotrue
  namespace: Supabase.Gotrue
  summary: "\nCreates a new user using their email address.\n"
  example: []
  syntax:
    content: public Api(string url, Dictionary<string, string> headers)
    parameters:
    - id: url
      type: System.String
      description: ''
    - id: headers
      type: System.Collections.Generic.Dictionary{System.String,System.String}
      description: ''
    content.vb: Public Sub New(url As String, headers As Dictionary(Of String, String))
  overload: Supabase.Gotrue.Api.#ctor*
  nameWithType.vb: Api.Api(String, Dictionary(Of String, String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Supabase.Gotrue.Api.Api(System.String, System.Collections.Generic.Dictionary(Of System.String, System.String))
  name.vb: Api(String, Dictionary(Of String, String))
- uid: Supabase.Gotrue.Api.SignUpWithEmail(System.String,System.String)
  commentId: M:Supabase.Gotrue.Api.SignUpWithEmail(System.String,System.String)
  id: SignUpWithEmail(System.String,System.String)
  parent: Supabase.Gotrue.Api
  langs:
  - csharp
  - vb
  name: SignUpWithEmail(String, String)
  nameWithType: Api.SignUpWithEmail(String, String)
  fullName: Supabase.Gotrue.Api.SignUpWithEmail(System.String, System.String)
  type: Method
  source:
    id: SignUpWithEmail
    path: /Users/schultzjosephj/dev/gotrue-csharp/Gotrue/Api.cs
    startLine: 28
  assemblies:
  - Gotrue
  namespace: Supabase.Gotrue
  syntax:
    content: public Task<Session> SignUpWithEmail(string email, string password)
    parameters:
    - id: email
      type: System.String
    - id: password
      type: System.String
    return:
      type: System.Threading.Tasks.Task{Supabase.Gotrue.Session}
    content.vb: Public Function SignUpWithEmail(email As String, password As String) As Task(Of Session)
  overload: Supabase.Gotrue.Api.SignUpWithEmail*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Supabase.Gotrue.Api.SignInWithEmail(System.String,System.String)
  commentId: M:Supabase.Gotrue.Api.SignInWithEmail(System.String,System.String)
  id: SignInWithEmail(System.String,System.String)
  parent: Supabase.Gotrue.Api
  langs:
  - csharp
  - vb
  name: SignInWithEmail(String, String)
  nameWithType: Api.SignInWithEmail(String, String)
  fullName: Supabase.Gotrue.Api.SignInWithEmail(System.String, System.String)
  type: Method
  source:
    id: SignInWithEmail
    path: /Users/schultzjosephj/dev/gotrue-csharp/Gotrue/Api.cs
    startLine: 40
  assemblies:
  - Gotrue
  namespace: Supabase.Gotrue
  summary: "\nLogs in an existing user using their email address.\n"
  example: []
  syntax:
    content: public Task<Session> SignInWithEmail(string email, string password)
    parameters:
    - id: email
      type: System.String
      description: ''
    - id: password
      type: System.String
      description: ''
    return:
      type: System.Threading.Tasks.Task{Supabase.Gotrue.Session}
      description: ''
    content.vb: Public Function SignInWithEmail(email As String, password As String) As Task(Of Session)
  overload: Supabase.Gotrue.Api.SignInWithEmail*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Supabase.Gotrue.Api.SendMagicLinkEmail(System.String)
  commentId: M:Supabase.Gotrue.Api.SendMagicLinkEmail(System.String)
  id: SendMagicLinkEmail(System.String)
  parent: Supabase.Gotrue.Api
  langs:
  - csharp
  - vb
  name: SendMagicLinkEmail(String)
  nameWithType: Api.SendMagicLinkEmail(String)
  fullName: Supabase.Gotrue.Api.SendMagicLinkEmail(System.String)
  type: Method
  source:
    id: SendMagicLinkEmail
    path: /Users/schultzjosephj/dev/gotrue-csharp/Gotrue/Api.cs
    startLine: 51
  assemblies:
  - Gotrue
  namespace: Supabase.Gotrue
  summary: "\nSends a magic login link to an email address.\n"
  example: []
  syntax:
    content: public Task<BaseResponse> SendMagicLinkEmail(string email)
    parameters:
    - id: email
      type: System.String
      description: ''
    return:
      type: System.Threading.Tasks.Task{Supabase.Gotrue.Responses.BaseResponse}
      description: ''
    content.vb: Public Function SendMagicLinkEmail(email As String) As Task(Of BaseResponse)
  overload: Supabase.Gotrue.Api.SendMagicLinkEmail*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Supabase.Gotrue.Api.InviteUserByEmail(System.String)
  commentId: M:Supabase.Gotrue.Api.InviteUserByEmail(System.String)
  id: InviteUserByEmail(System.String)
  parent: Supabase.Gotrue.Api
  langs:
  - csharp
  - vb
  name: InviteUserByEmail(String)
  nameWithType: Api.InviteUserByEmail(String)
  fullName: Supabase.Gotrue.Api.InviteUserByEmail(System.String)
  type: Method
  source:
    id: InviteUserByEmail
    path: /Users/schultzjosephj/dev/gotrue-csharp/Gotrue/Api.cs
    startLine: 62
  assemblies:
  - Gotrue
  namespace: Supabase.Gotrue
  summary: "\nSends an invite link to an email address.\n"
  example: []
  syntax:
    content: public Task<BaseResponse> InviteUserByEmail(string email)
    parameters:
    - id: email
      type: System.String
      description: ''
    return:
      type: System.Threading.Tasks.Task{Supabase.Gotrue.Responses.BaseResponse}
      description: ''
    content.vb: Public Function InviteUserByEmail(email As String) As Task(Of BaseResponse)
  overload: Supabase.Gotrue.Api.InviteUserByEmail*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Supabase.Gotrue.Api.ResetPasswordForEmail(System.String)
  commentId: M:Supabase.Gotrue.Api.ResetPasswordForEmail(System.String)
  id: ResetPasswordForEmail(System.String)
  parent: Supabase.Gotrue.Api
  langs:
  - csharp
  - vb
  name: ResetPasswordForEmail(String)
  nameWithType: Api.ResetPasswordForEmail(String)
  fullName: Supabase.Gotrue.Api.ResetPasswordForEmail(System.String)
  type: Method
  source:
    id: ResetPasswordForEmail
    path: /Users/schultzjosephj/dev/gotrue-csharp/Gotrue/Api.cs
    startLine: 73
  assemblies:
  - Gotrue
  namespace: Supabase.Gotrue
  summary: "\nSends a reset request to an email address.\n"
  example: []
  syntax:
    content: public Task<BaseResponse> ResetPasswordForEmail(string email)
    parameters:
    - id: email
      type: System.String
      description: ''
    return:
      type: System.Threading.Tasks.Task{Supabase.Gotrue.Responses.BaseResponse}
      description: ''
    content.vb: Public Function ResetPasswordForEmail(email As String) As Task(Of BaseResponse)
  overload: Supabase.Gotrue.Api.ResetPasswordForEmail*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Supabase.Gotrue.Api.SignOut(System.String)
  commentId: M:Supabase.Gotrue.Api.SignOut(System.String)
  id: SignOut(System.String)
  parent: Supabase.Gotrue.Api
  langs:
  - csharp
  - vb
  name: SignOut(String)
  nameWithType: Api.SignOut(String)
  fullName: Supabase.Gotrue.Api.SignOut(System.String)
  type: Method
  source:
    id: SignOut
    path: /Users/schultzjosephj/dev/gotrue-csharp/Gotrue/Api.cs
    startLine: 113
  assemblies:
  - Gotrue
  namespace: Supabase.Gotrue
  summary: "\nRemoves a logged-in session.\n"
  example: []
  syntax:
    content: public Task<BaseResponse> SignOut(string jwt)
    parameters:
    - id: jwt
      type: System.String
      description: ''
    return:
      type: System.Threading.Tasks.Task{Supabase.Gotrue.Responses.BaseResponse}
      description: ''
    content.vb: Public Function SignOut(jwt As String) As Task(Of BaseResponse)
  overload: Supabase.Gotrue.Api.SignOut*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Supabase.Gotrue.Api.GetUser(System.String)
  commentId: M:Supabase.Gotrue.Api.GetUser(System.String)
  id: GetUser(System.String)
  parent: Supabase.Gotrue.Api
  langs:
  - csharp
  - vb
  name: GetUser(String)
  nameWithType: Api.GetUser(String)
  fullName: Supabase.Gotrue.Api.GetUser(System.String)
  type: Method
  source:
    id: GetUser
    path: /Users/schultzjosephj/dev/gotrue-csharp/Gotrue/Api.cs
    startLine: 125
  assemblies:
  - Gotrue
  namespace: Supabase.Gotrue
  summary: "\nGets User Details\n"
  example: []
  syntax:
    content: public Task<User> GetUser(string jwt)
    parameters:
    - id: jwt
      type: System.String
      description: ''
    return:
      type: System.Threading.Tasks.Task{Supabase.Gotrue.User}
      description: ''
    content.vb: Public Function GetUser(jwt As String) As Task(Of User)
  overload: Supabase.Gotrue.Api.GetUser*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Supabase.Gotrue.Api.UpdateUser(System.String,Supabase.Gotrue.UserAttributes)
  commentId: M:Supabase.Gotrue.Api.UpdateUser(System.String,Supabase.Gotrue.UserAttributes)
  id: UpdateUser(System.String,Supabase.Gotrue.UserAttributes)
  parent: Supabase.Gotrue.Api
  langs:
  - csharp
  - vb
  name: UpdateUser(String, UserAttributes)
  nameWithType: Api.UpdateUser(String, UserAttributes)
  fullName: Supabase.Gotrue.Api.UpdateUser(System.String, Supabase.Gotrue.UserAttributes)
  type: Method
  source:
    id: UpdateUser
    path: /Users/schultzjosephj/dev/gotrue-csharp/Gotrue/Api.cs
    startLine: 138
  assemblies:
  - Gotrue
  namespace: Supabase.Gotrue
  summary: "\nUpdates the User data\n"
  example: []
  syntax:
    content: public Task<User> UpdateUser(string jwt, UserAttributes attributes)
    parameters:
    - id: jwt
      type: System.String
      description: ''
    - id: attributes
      type: Supabase.Gotrue.UserAttributes
      description: ''
    return:
      type: System.Threading.Tasks.Task{Supabase.Gotrue.User}
      description: ''
    content.vb: Public Function UpdateUser(jwt As String, attributes As UserAttributes) As Task(Of User)
  overload: Supabase.Gotrue.Api.UpdateUser*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Supabase.Gotrue.Api.RefreshAccessToken(System.String)
  commentId: M:Supabase.Gotrue.Api.RefreshAccessToken(System.String)
  id: RefreshAccessToken(System.String)
  parent: Supabase.Gotrue.Api
  langs:
  - csharp
  - vb
  name: RefreshAccessToken(String)
  nameWithType: Api.RefreshAccessToken(String)
  fullName: Supabase.Gotrue.Api.RefreshAccessToken(System.String)
  type: Method
  source:
    id: RefreshAccessToken
    path: /Users/schultzjosephj/dev/gotrue-csharp/Gotrue/Api.cs
    startLine: 148
  assemblies:
  - Gotrue
  namespace: Supabase.Gotrue
  summary: "\nGenerates a new JWT\n"
  example: []
  syntax:
    content: public Task<Session> RefreshAccessToken(string refreshToken)
    parameters:
    - id: refreshToken
      type: System.String
      description: ''
    return:
      type: System.Threading.Tasks.Task{Supabase.Gotrue.Session}
      description: ''
    content.vb: Public Function RefreshAccessToken(refreshToken As String) As Task(Of Session)
  overload: Supabase.Gotrue.Api.RefreshAccessToken*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Supabase.Gotrue
  commentId: N:Supabase.Gotrue
  name: Supabase.Gotrue
  nameWithType: Supabase.Gotrue
  fullName: Supabase.Gotrue
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Supabase.Gotrue.Api.Url*
  commentId: Overload:Supabase.Gotrue.Api.Url
  name: Url
  nameWithType: Api.Url
  fullName: Supabase.Gotrue.Api.Url
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, String>
  nameWithType: Dictionary<String, String>
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>
  nameWithType.vb: Dictionary(Of String, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Supabase.Gotrue.Api.#ctor*
  commentId: Overload:Supabase.Gotrue.Api.#ctor
  name: Api
  nameWithType: Api.Api
  fullName: Supabase.Gotrue.Api.Api
- uid: Supabase.Gotrue.Api.SignUpWithEmail*
  commentId: Overload:Supabase.Gotrue.Api.SignUpWithEmail
  name: SignUpWithEmail
  nameWithType: Api.SignUpWithEmail
  fullName: Supabase.Gotrue.Api.SignUpWithEmail
- uid: System.Threading.Tasks.Task{Supabase.Gotrue.Session}
  commentId: T:System.Threading.Tasks.Task{Supabase.Gotrue.Session}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Session>
  nameWithType: Task<Session>
  fullName: System.Threading.Tasks.Task<Supabase.Gotrue.Session>
  nameWithType.vb: Task(Of Session)
  fullName.vb: System.Threading.Tasks.Task(Of Supabase.Gotrue.Session)
  name.vb: Task(Of Session)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Supabase.Gotrue.Session
    name: Session
    nameWithType: Session
    fullName: Supabase.Gotrue.Session
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Supabase.Gotrue.Session
    name: Session
    nameWithType: Session
    fullName: Supabase.Gotrue.Session
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Supabase.Gotrue.Api.SignInWithEmail*
  commentId: Overload:Supabase.Gotrue.Api.SignInWithEmail
  name: SignInWithEmail
  nameWithType: Api.SignInWithEmail
  fullName: Supabase.Gotrue.Api.SignInWithEmail
- uid: Supabase.Gotrue.Api.SendMagicLinkEmail*
  commentId: Overload:Supabase.Gotrue.Api.SendMagicLinkEmail
  name: SendMagicLinkEmail
  nameWithType: Api.SendMagicLinkEmail
  fullName: Supabase.Gotrue.Api.SendMagicLinkEmail
- uid: System.Threading.Tasks.Task{Supabase.Gotrue.Responses.BaseResponse}
  commentId: T:System.Threading.Tasks.Task{Supabase.Gotrue.Responses.BaseResponse}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<BaseResponse>
  nameWithType: Task<BaseResponse>
  fullName: System.Threading.Tasks.Task<Supabase.Gotrue.Responses.BaseResponse>
  nameWithType.vb: Task(Of BaseResponse)
  fullName.vb: System.Threading.Tasks.Task(Of Supabase.Gotrue.Responses.BaseResponse)
  name.vb: Task(Of BaseResponse)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Supabase.Gotrue.Responses.BaseResponse
    name: BaseResponse
    nameWithType: BaseResponse
    fullName: Supabase.Gotrue.Responses.BaseResponse
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Supabase.Gotrue.Responses.BaseResponse
    name: BaseResponse
    nameWithType: BaseResponse
    fullName: Supabase.Gotrue.Responses.BaseResponse
  - name: )
    nameWithType: )
    fullName: )
- uid: Supabase.Gotrue.Api.InviteUserByEmail*
  commentId: Overload:Supabase.Gotrue.Api.InviteUserByEmail
  name: InviteUserByEmail
  nameWithType: Api.InviteUserByEmail
  fullName: Supabase.Gotrue.Api.InviteUserByEmail
- uid: Supabase.Gotrue.Api.ResetPasswordForEmail*
  commentId: Overload:Supabase.Gotrue.Api.ResetPasswordForEmail
  name: ResetPasswordForEmail
  nameWithType: Api.ResetPasswordForEmail
  fullName: Supabase.Gotrue.Api.ResetPasswordForEmail
- uid: Supabase.Gotrue.Api.SignOut*
  commentId: Overload:Supabase.Gotrue.Api.SignOut
  name: SignOut
  nameWithType: Api.SignOut
  fullName: Supabase.Gotrue.Api.SignOut
- uid: Supabase.Gotrue.Api.GetUser*
  commentId: Overload:Supabase.Gotrue.Api.GetUser
  name: GetUser
  nameWithType: Api.GetUser
  fullName: Supabase.Gotrue.Api.GetUser
- uid: System.Threading.Tasks.Task{Supabase.Gotrue.User}
  commentId: T:System.Threading.Tasks.Task{Supabase.Gotrue.User}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<User>
  nameWithType: Task<User>
  fullName: System.Threading.Tasks.Task<Supabase.Gotrue.User>
  nameWithType.vb: Task(Of User)
  fullName.vb: System.Threading.Tasks.Task(Of Supabase.Gotrue.User)
  name.vb: Task(Of User)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Supabase.Gotrue.User
    name: User
    nameWithType: User
    fullName: Supabase.Gotrue.User
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Supabase.Gotrue.User
    name: User
    nameWithType: User
    fullName: Supabase.Gotrue.User
  - name: )
    nameWithType: )
    fullName: )
- uid: Supabase.Gotrue.Api.UpdateUser*
  commentId: Overload:Supabase.Gotrue.Api.UpdateUser
  name: UpdateUser
  nameWithType: Api.UpdateUser
  fullName: Supabase.Gotrue.Api.UpdateUser
- uid: Supabase.Gotrue.UserAttributes
  commentId: T:Supabase.Gotrue.UserAttributes
  parent: Supabase.Gotrue
  name: UserAttributes
  nameWithType: UserAttributes
  fullName: Supabase.Gotrue.UserAttributes
- uid: Supabase.Gotrue.Api.RefreshAccessToken*
  commentId: Overload:Supabase.Gotrue.Api.RefreshAccessToken
  name: RefreshAccessToken
  nameWithType: Api.RefreshAccessToken
  fullName: Supabase.Gotrue.Api.RefreshAccessToken
